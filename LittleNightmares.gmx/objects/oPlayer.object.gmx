<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>par_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Tvorba globálních objektů
if (instance_number(oVariableController) = 0)
   {
    instance_create(x,y,oVariableController)
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deklarace proměnných 

// Nastavení zabudovaných proměnných:
image_speed = 0; // Rychlost animace spritu (n*room_speed)


// Proměnné:    (názvy proměnných doporučuji v aj, VŽDY bez interpunkce a diakritiky)
gold = oVariableController.gold; // Zlato, které má hráč k dispozici
hp = 100; // Výchozí hodnota života
max_hp = 100; // Maximální možný život 
mana = 100; // Základní hodnota many (kouzelné energie)
max_mana = 100; // Maximální hodnota many
can_move = 1; // Určuje zda se hráč může pohybovat, nabývá hodnot 0,1 (true - false, datový typ boolean)
dir = ""; // Směr pohybu (w,s,a,d)
rychlost = 8.1; // rychlost pohybu 
a1 = 0;// pro volání alarm[0]
spell_on = 0; // Určuje zda hráč sesílá kouzlo
mana_recovery = 1; // Rychlost regenerace many
vision_selected= "vision_red";
can_port = 0; // Zda se hráč může teleportovat
key = 0; // Zda má hráč klíč (1,0)
in_shadow = 0 // Zda je hráč ve stínu (tzn. snížená viditelnost)
ghost = 0 // Zda má hráč vyvolaného ducha
can_move2 = 1 // Určuje zda se hráč může pohybovat

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Proměnné pro ostatní objekty

flower1if = instance_number(oFlower1IF)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 12;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pohyb

if (can_move = 1 &amp;&amp; can_move2 = 1)  // Pokud se může pohybovat
    {   // Začátek bloku akcí
    if (keyboard_check(ord("W"))) // Pokud je zmáčknuta klávesa W (funkci ord [ordinary] voláme vždy s velkým písmenem) 
        {
        a1 = 0
        dir = "w";
        image_speed = (0.25+(rychlost/100));
        direction = 90;
        speed = rychlost;
        } 
    
    if (keyboard_check(ord("S"))) // Pokud je zmáčknuta klávesa S
        {
        a1 = 0
        dir = "s";
        image_speed = (0.25+(rychlost/100));
        direction = 270;
        speed = rychlost;
        } 
        
    if (keyboard_check(ord("A"))) // Pokud je zmáčknuta klávesa A
        {
        a1 = 0
        dir = "a";
        image_speed = (0.25+(rychlost/100));
        direction = 180;
        speed = rychlost;
        }  
        
    if (keyboard_check(ord("D"))) // Pokud je zmáčknuta klávesa D
        {
        a1 = 0
        dir = "d";
        image_speed = (0.25+(rychlost/100));
        direction = 360;
        speed = rychlost;
        }  
        
        
        
    if ((!keyboard_check(ord("W")) &amp;&amp; !keyboard_check(ord("S"))  &amp;&amp; !keyboard_check(ord("A"))  &amp;&amp; !keyboard_check(ord("D"))) &amp;&amp; a1 = 0)
        {
        a1 = 1;
        alarm[0] = 3;
        dir = "";
        image_speed = 0;
        speed = 0;
       
        }
    }  // Konec bloku akcí
if (can_move = 0)
    {
    dir = "s" // Pokud hráč vykonává speciální pohyb řídí se animace jinými pravidly
    image_index = 12;
    }    
// Animace podle směru
if (dir = "w")
    {
     if (image_index &lt; 9 || image_index &gt; 12)
            {
            image_index = 9;
            } 
    }
if (dir = "s")
    {
     if (image_index &lt; 0 || image_index &gt; 3)
            {
            image_index = 0;
            } 
    }    
if (dir = "a")
    {
     if (image_index &lt; 3 || image_index &gt; 6)
            {
            image_index = 3;
            } 
    }    
if (dir = "d")
    {
     if (image_index &lt; 6 || image_index &gt; 9)
            {
            image_index = 6;
            } 
    }            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kouzlení

if (mana &gt; max_mana) {mana = max_mana;}
if (spell_on = 1 &amp;&amp; vision_selected = "vision_red")
    {
    sprite_index = sPlayer2
    }
if (spell_on = 1 &amp;&amp; vision_selected = "vision_blue")
    {
    sprite_index = sPlayer4
    }
if (spell_on = 1 &amp;&amp; vision_selected = "vision_green")
    {
    sprite_index = sPlayer3
    }
        
if (spell_on = 0) { sprite_index = sPlayer rychlost = 8.1}
if (spell_on = 0)
    {
    if (mana &lt; max_mana &amp;&amp; ghost = 0)
        {
        mana += mana_recovery;
        }
    }
    
if (keyboard_check_pressed(vk_space))
    {
    spell_on = !spell_on;
    
    }

if (spell_on = 1) 
    {
    if (mana &gt; 0) {mana -= 0.5}
    else {spell_on = 0}
    }
    
if (spell_on = 1 &amp;&amp; vision_selected = "vision_green")
    {
    rychlost = 10.1;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Speciální pohyb
/*
if (special_moving = 1)
    {
    can_move = 0;
    speed = 0;
    image_index = 12;
    }
else
    {
    can_move = 1;
    
    }
if (mouse_check_button_pressed(mb_right) &amp;&amp; distance_to_point(mouse_x,mouse_y) &gt; 0 &amp;&amp; perform_special_move = 0) 
    {
    special_moving = 1;
    
    for (a = 0 a&lt;5 a++)
        {
        if (point_x[a] = 0)
            {
            point_x[a] = mouse_x;
            point_y[a] = mouse_y;
            break
            }
        }
        
        
    }
if (mouse_check_button_pressed(mb_right) &amp;&amp; distance_to_point(mouse_x,mouse_y) = 0 &amp;&amp; perform_special_move = 0)
    {
    special_moving = 0;
    scrNullSpecialPoints()
    }
if (mouse_check_button_pressed(mb_left) &amp;&amp; special_moving = 1)
    {
     if (point_x[0]!= 0)
        {
        if (!collision_line(x,y,point_x[0],point_y[0],par_wall,0,1))
            {
            can_perform = 1;
            }
            else { can_perform = 0}
        }
    if (point_x[1]!= 0)
        {
        if (!collision_line(point_x[0],point_y[0],point_x[1],point_y[1],par_wall,0,1))
            {
            can_perform = 1;
            }
             else { can_perform = 0}
        }
    if (can_perform = 1)
    {    
    if (point_x[2]!= 0)
        {
        if (!collision_line(point_x[1],point_y[1],point_x[2],point_y[2],par_wall,0,1))
            {
            can_perform = 1;
            }
             else { can_perform = 0}
        }
    }
     if (can_perform = 1)
    {      
    if (point_x[3]!= 0)
        {
        if (!collision_line(point_x[2],point_y[2],point_x[3],point_y[3],par_wall,0,1))
            {
            can_perform = 1;
            }
             else { can_perform = 0}
        }
    }
    if (can_perform = 1)
    {       
    if (point_x[4]!= 0)
        {
        if (!collision_line(point_x[3],point_y[3],point_x[4],point_y[4],par_wall,0,1))
            {
            can_perform = 1;
            }
             else { can_perform = 0}
        }
     }   
    if (can_perform = 1)
        {    
        perform_special_move = 1;
        }
    }
    
if (perform_special_move = 1)
    {
    if (direction &gt; 45 &amp;&amp; direction &lt; 135)
        {
        image_index = 9;
        }
    if (direction &gt; 135 &amp;&amp; direction &lt; 225)
        {
        image_index = 3;
        }
     if (direction &gt; 225 &amp;&amp; direction &lt; 315)
        {
        image_index = 0;
        }
      if ((direction &gt; 315 &amp;&amp; direction &lt; 360) || (direction &gt; 0 &amp;&amp; direction &lt; 45))
        {
        image_index = 6;
        }
    if (point_x[0]!= 0 &amp;&amp; point = 0)
        {
        if (distance_to_point(point_x[0],point_y[0]) &gt; 4)
            {
            move_towards_point(point_x[0],point_y[0],12)
            }
        if (distance_to_point(point_x[0],point_y[0]) &lt; 4)  
           {
           point = 1
           }
        }
    if (point_x[1] = 0 &amp;&amp; point = 1)
        {
        perform_special_move = 0;
        special_moving = 0;
        scrNullSpecialPoints()
        }
       
    if (point_x[1]!= 0 &amp;&amp; point = 1)
        {
        if (distance_to_point(point_x[1],point_y[1]) &gt; 4)
            {
            move_towards_point(point_x[1],point_y[1],12)
            }
        if (distance_to_point(point_x[1],point_y[1]) &lt; 4)  
           {
           point = 2
           }
        }
     if (point_x[2] = 0 &amp;&amp; point = 2)
        {
        perform_special_move = 0;
        special_moving = 0;
        scrNullSpecialPoints()
        }
        
     if (point_x[2]!= 0 &amp;&amp; point = 2)
        {
        if (distance_to_point(point_x[2],point_y[2]) &gt; 4)
            {
            move_towards_point(point_x[2],point_y[2],12)
            }
        if (distance_to_point(point_x[2],point_y[2]) &lt; 4)  
           {
           point = 3
           }
        }
    
    if (point_x[3] = 0 &amp;&amp; point = 3)
        {
        perform_special_move = 0;
        special_moving = 0;
        scrNullSpecialPoints()
        }
        
     if (point_x[3]!= 0 &amp;&amp; point = 3)
        {
        if (distance_to_point(point_x[3],point_y[3]) &gt; 4)
            {
            move_towards_point(point_x[3],point_y[3],12)
            }
        if (distance_to_point(point_x[3],point_y[3]) &lt; 4)  
           {
           point = 4
           }
        }   
        
     if (point_x[4] = 0 &amp;&amp; point = 4)
        {
        perform_special_move = 0;
        special_moving = 0;
        scrNullSpecialPoints()
        }
        
     if (point_x[4]!= 0 &amp;&amp; point = 4)
        {
        if (distance_to_point(point_x[4],point_y[4]) &gt; 4)
            {
            move_towards_point(point_x[4],point_y[4],12)
            }
        if (distance_to_point(point_x[4],point_y[4]) &lt; 4)  
           {
           point = 5
           }
        }       
        
        
        
        
        
        
        
        
    }
        
        
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kontrola proměnných:
if (hp &lt;= 0) 
   {
 scrDeathTransition()
  }


   
   
   

if (instance_number(oMagicSign) &gt; 0)
    {
    magic_sign = instance_nearest(x,y,par_sign)
    if (distance_to_object(magic_sign) = 0)
        {
        can_port = 1;
        if (spell_on = 1 &amp;&amp; vision_selected = "vision_blue")
            {
            scrEffectMagicSign();
            }
        }
        else
            {
            can_port = 0;
            
            }
    }
    
if (instance_number(oShadow1) &gt; 0)
    {
    shadow = instance_nearest(x,y,oShadow1)
    if (distance_to_object(shadow) = 0)
       {
        in_shadow = 1;
       }
       else {in_shadow = 0;}
    }
    else  {in_shadow = 0;}
    
    oVariableController.gold = gold
    
    if (hp &gt; max_hp)
       {
        hp = max_hp;
       }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Změna kouzla
if (keyboard_check_pressed(vk_tab) &amp;&amp; can_move = 1 &amp;&amp; instance_number(oSpellChoose) = 0)
    {
    instance_create(view_xview+430,view_yview+250,oSpellChoose);
    }
    
if (keyboard_check_pressed(ord("Q")) &amp;&amp; can_move = 1)
    {
    spell_on = 0;
    if (vision_selected = "vision_red")   {vision_selected = "vision_green"  exit}
    if (vision_selected = "vision_green") {vision_selected = "vision_blue" exit}
    if (vision_selected = "vision_blue")  {vision_selected = "vision_red"   exit}
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Vyvolání ducha
if (keyboard_check_pressed(ord("R")) &amp;&amp; can_move2 = 1 &amp;&amp; ghost = 0 &amp;&amp; can_move = 1)
   {
    can_move2 = 0;
    ghost = 1
    instance_create(x,y,oPlayerGhost)
    view_object[0] = oPlayerGhost
   
   }
else if (keyboard_check_pressed(ord("R")) &amp;&amp; can_move2 = 0 &amp;&amp; ghost = 1 &amp;&amp; can_move = 1)
   {
    can_move2 = 1;
    ghost = 0
   with(oPlayerGhost) {instance_destroy()}
    view_object = oPlayer

   }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sebevražda
if (keyboard_check_pressed(ord("P")))
   {
   hp = 0;
   }
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>33,33</point>
  </PhysicsShapePoints>
</object>
